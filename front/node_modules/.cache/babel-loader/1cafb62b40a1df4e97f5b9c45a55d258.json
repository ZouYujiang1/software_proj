{"ast":null,"code":"import baseEach from './_baseEach.js';\n/**\r\n * The base implementation of `_.filter` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n */\n\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function (value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;","map":{"version":3,"names":["baseEach","baseFilter","collection","predicate","result","value","index","push"],"sources":["D:/software_proj/front/node_modules/lodash-es/_baseFilter.js"],"sourcesContent":["import baseEach from './_baseEach.js';\r\n\r\n/**\r\n * The base implementation of `_.filter` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {Array} Returns the new filtered array.\r\n */\r\nfunction baseFilter(collection, predicate) {\r\n  var result = [];\r\n  baseEach(collection, function(value, index, collection) {\r\n    if (predicate(value, index, collection)) {\r\n      result.push(value);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default baseFilter;\r\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,SAAhC,EAA2C;EACzC,IAAIC,MAAM,GAAG,EAAb;EACAJ,QAAQ,CAACE,UAAD,EAAa,UAASG,KAAT,EAAgBC,KAAhB,EAAuBJ,UAAvB,EAAmC;IACtD,IAAIC,SAAS,CAACE,KAAD,EAAQC,KAAR,EAAeJ,UAAf,CAAb,EAAyC;MACvCE,MAAM,CAACG,IAAP,CAAYF,KAAZ;IACD;EACF,CAJO,CAAR;EAKA,OAAOD,MAAP;AACD;;AAED,eAAeH,UAAf"},"metadata":{},"sourceType":"module"}