{"ast":null,"code":"import baseEach from './_baseEach.js';\n/**\r\n * The base implementation of `_.every` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`\r\n */\n\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function (value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;","map":{"version":3,"names":["baseEach","baseEvery","collection","predicate","result","value","index"],"sources":["D:/software_proj/front/node_modules/lodash-es/_baseEvery.js"],"sourcesContent":["import baseEach from './_baseEach.js';\r\n\r\n/**\r\n * The base implementation of `_.every` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\r\n *  else `false`\r\n */\r\nfunction baseEvery(collection, predicate) {\r\n  var result = true;\r\n  baseEach(collection, function(value, index, collection) {\r\n    result = !!predicate(value, index, collection);\r\n    return result;\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default baseEvery;\r\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,SAA/B,EAA0C;EACxC,IAAIC,MAAM,GAAG,IAAb;EACAJ,QAAQ,CAACE,UAAD,EAAa,UAASG,KAAT,EAAgBC,KAAhB,EAAuBJ,UAAvB,EAAmC;IACtDE,MAAM,GAAG,CAAC,CAACD,SAAS,CAACE,KAAD,EAAQC,KAAR,EAAeJ,UAAf,CAApB;IACA,OAAOE,MAAP;EACD,CAHO,CAAR;EAIA,OAAOA,MAAP;AACD;;AAED,eAAeH,SAAf"},"metadata":{},"sourceType":"module"}