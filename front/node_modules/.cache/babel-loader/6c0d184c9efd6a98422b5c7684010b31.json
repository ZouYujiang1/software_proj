{"ast":null,"code":"import baseToString from './_baseToString.js';\nimport baseTrim from './_baseTrim.js';\nimport castSlice from './_castSlice.js';\nimport charsEndIndex from './_charsEndIndex.js';\nimport charsStartIndex from './_charsStartIndex.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n/**\r\n * Removes leading and trailing whitespace or specified characters from `string`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to trim.\r\n * @param {string} [chars=whitespace] The characters to trim.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {string} Returns the trimmed string.\r\n * @example\r\n *\r\n * _.trim('  abc  ');\r\n * // => 'abc'\r\n *\r\n * _.trim('-_-abc-_-', '_-');\r\n * // => 'abc'\r\n *\r\n * _.map(['  foo  ', '  bar  '], _.trim);\r\n * // => ['foo', 'bar']\r\n */\n\nfunction trim(string, chars, guard) {\n  string = toString(string);\n\n  if (string && (guard || chars === undefined)) {\n    return baseTrim(string);\n  }\n\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n  return castSlice(strSymbols, start, end).join('');\n}\n\nexport default trim;","map":{"version":3,"names":["baseToString","baseTrim","castSlice","charsEndIndex","charsStartIndex","stringToArray","toString","trim","string","chars","guard","undefined","strSymbols","chrSymbols","start","end","join"],"sources":["D:/software_proj/front/node_modules/lodash-es/trim.js"],"sourcesContent":["import baseToString from './_baseToString.js';\r\nimport baseTrim from './_baseTrim.js';\r\nimport castSlice from './_castSlice.js';\r\nimport charsEndIndex from './_charsEndIndex.js';\r\nimport charsStartIndex from './_charsStartIndex.js';\r\nimport stringToArray from './_stringToArray.js';\r\nimport toString from './toString.js';\r\n\r\n/**\r\n * Removes leading and trailing whitespace or specified characters from `string`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to trim.\r\n * @param {string} [chars=whitespace] The characters to trim.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {string} Returns the trimmed string.\r\n * @example\r\n *\r\n * _.trim('  abc  ');\r\n * // => 'abc'\r\n *\r\n * _.trim('-_-abc-_-', '_-');\r\n * // => 'abc'\r\n *\r\n * _.map(['  foo  ', '  bar  '], _.trim);\r\n * // => ['foo', 'bar']\r\n */\r\nfunction trim(string, chars, guard) {\r\n  string = toString(string);\r\n  if (string && (guard || chars === undefined)) {\r\n    return baseTrim(string);\r\n  }\r\n  if (!string || !(chars = baseToString(chars))) {\r\n    return string;\r\n  }\r\n  var strSymbols = stringToArray(string),\r\n      chrSymbols = stringToArray(chars),\r\n      start = charsStartIndex(strSymbols, chrSymbols),\r\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\r\n\r\n  return castSlice(strSymbols, start, end).join('');\r\n}\r\n\r\nexport default trim;\r\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;EAClCF,MAAM,GAAGF,QAAQ,CAACE,MAAD,CAAjB;;EACA,IAAIA,MAAM,KAAKE,KAAK,IAAID,KAAK,KAAKE,SAAxB,CAAV,EAA8C;IAC5C,OAAOV,QAAQ,CAACO,MAAD,CAAf;EACD;;EACD,IAAI,CAACA,MAAD,IAAW,EAAEC,KAAK,GAAGT,YAAY,CAACS,KAAD,CAAtB,CAAf,EAA+C;IAC7C,OAAOD,MAAP;EACD;;EACD,IAAII,UAAU,GAAGP,aAAa,CAACG,MAAD,CAA9B;EAAA,IACIK,UAAU,GAAGR,aAAa,CAACI,KAAD,CAD9B;EAAA,IAEIK,KAAK,GAAGV,eAAe,CAACQ,UAAD,EAAaC,UAAb,CAF3B;EAAA,IAGIE,GAAG,GAAGZ,aAAa,CAACS,UAAD,EAAaC,UAAb,CAAb,GAAwC,CAHlD;EAKA,OAAOX,SAAS,CAACU,UAAD,EAAaE,KAAb,EAAoBC,GAApB,CAAT,CAAkCC,IAAlC,CAAuC,EAAvC,CAAP;AACD;;AAED,eAAeT,IAAf"},"metadata":{},"sourceType":"module"}