{"ast":null,"code":"import axios from \"axios\";\nimport Router from \"@/router\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"Ch_status\",\n\n  data() {\n    return {\n      message: \"\",\n      current: \"\",\n      current_index: 0,\n      current_id: '000',\n      timer: '',\n      gettime: ''\n    };\n  },\n\n  mounted() {\n    let vm = this;\n    const route = useRoute(); //从路由中获取充电桩id\n\n    vm.current_id = route.params.id;\n    vm.getCurrentTime();\n    vm.get_data();\n    vm.timer = setInterval(() => vm.get_data(), 60000); //60s轮询\n  },\n\n  methods: {\n    getCurrentTime() {\n      //获取当前时间并打印\n      var _this = this;\n\n      let yy = new Date().getFullYear();\n      let mm = new Date().getMonth() + 1;\n      let dd = new Date().getDate();\n      let hh = new Date().getHours();\n      let mf = new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes();\n      let ss = new Date().getSeconds() < 10 ? '0' + new Date().getSeconds() : new Date().getSeconds();\n      _this.gettime = yy + '-' + mm + '-' + dd;\n      console.log(_this.gettime);\n    },\n\n    search(event) {\n      let search_id = document.getElementById('in').value;\n\n      for (const i in this.message) {\n        if (this.message[i].id == search_id) {\n          this.current = this.message[i];\n          this.current_index = i;\n          this.current_id = search_id;\n          break;\n        }\n      }\n    },\n\n    get_data() {\n      let vm = this;\n      axios.get('http://127.0.0.1:5000/admin/charger/statistic').then(function (response) {\n        response = response.data['data'];\n        vm.message = response;\n        vm.current = response[0];\n\n        for (const i in response) {\n          if (response[i].id == vm.current_id) {\n            vm.current = response[i];\n            vm.current_index = i;\n            break;\n          }\n        }\n\n        if (vm.current === null) {\n          vm.current = response[0];\n          alert(\"wrong id\");\n        }\n      }).catch(function (error) {\n        // 请求失败处理\n        console.log(error);\n      });\n    },\n\n    data_pre(event) {},\n\n    switch_charge(event) {},\n\n    next_one(event) {\n      if (this.message.length <= this.current_index + 1) {\n        return;\n      }\n\n      this.current_index = this.current_index + 1;\n      this.current = this.message[this.current_index];\n      this.current_id = this.current.id;\n      this.data_pre();\n    },\n\n    last_one(event) {\n      if (0 > this.current_index - 1) {\n        return;\n      }\n\n      this.current_index = this.current_index - 1;\n      this.current = this.message[this.current_index];\n      this.current_id = this.current.id;\n      this.data_pre();\n    }\n\n  },\n\n  updated() {},\n\n  destroyed() {\n    clearInterval(this.timer);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","Router","useRoute","name","data","message","current","current_index","current_id","timer","gettime","mounted","vm","route","params","id","getCurrentTime","get_data","setInterval","methods","_this","yy","Date","getFullYear","mm","getMonth","dd","getDate","hh","getHours","mf","getMinutes","ss","getSeconds","console","log","search","event","search_id","document","getElementById","value","i","get","then","response","alert","catch","error","data_pre","switch_charge","next_one","length","last_one","updated","destroyed","clearInterval"],"sourceRoot":"","sources":["D:\\software_proj\\front\\src\\views\\Ch_statistic.vue"],"sourcesContent":["<template>\r\n  <table border=\"1\" align=\"center\" style=\"width:85%; height:400px\">\r\n    <tr>\r\n      <td>\r\n        充电桩编号：{{current.id}}\r\n        <button v-on:click=\"last_one\" style=\"float: left\">上一个</button>\r\n        <button v-on:click=\"next_one\" style=\"float: right\">下一个</button>\r\n      </td>\r\n\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        时间：{{gettime}}\r\n      </td>\r\n\r\n    </tr>\r\n    <tr>\r\n      <td>累计充电次数：{{current.used_times}}</td>\r\n\r\n    </tr>\r\n    <tr>\r\n      <td>充电总时长：{{current.used_minutes}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td>充电总电量：{{current.used_vol}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td>累计充电费用：{{current.charge_cost}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td>累计服务费用：{{current.service_cost}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td>累计总费用：{{current.total_cost}}</td>\r\n    </tr>\r\n    <tr>\r\n      <input type=\"text\" class=\"in\" id=\"in\" placeholder=\"请输入查询充电桩ID\" />\r\n      <button class=\"btn_search\" v-on:click=\"search\">搜索</button>\r\n\r\n    </tr>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Router from \"@/router\";\r\nimport {useRoute} from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"Ch_status\",\r\n  data(){\r\n    return {\r\n      message: \"\",\r\n      current: \"\",\r\n      current_index: 0,\r\n      current_id: '000',\r\n      timer: '',\r\n      gettime: '',\r\n    }\r\n  },\r\n  mounted() {\r\n    let vm = this;\r\n    const route = useRoute()\r\n    //从路由中获取充电桩id\r\n    vm.current_id = route.params.id\r\n    vm.getCurrentTime()\r\n    vm.get_data()\r\n    vm.timer = setInterval(() => vm.get_data()\r\n      , 60000)//60s轮询\r\n\r\n  },\r\n  methods:{\r\n    getCurrentTime() {\r\n      //获取当前时间并打印\r\n      var _this = this;\r\n      let yy = new Date().getFullYear();\r\n      let mm = new Date().getMonth()+1;\r\n      let dd = new Date().getDate();\r\n      let hh = new Date().getHours();\r\n      let mf = new Date().getMinutes()<10 ? '0'+new Date().getMinutes() : new Date().getMinutes();\r\n      let ss = new Date().getSeconds()<10 ? '0'+new Date().getSeconds() : new Date().getSeconds();\r\n      _this.gettime = yy+'-'+mm+'-'+dd\r\n      console.log(_this.gettime)\r\n    },\r\n    search(event){\r\n      let search_id = document.getElementById('in').value\r\n      for(const i in this.message){\r\n        if(this.message[i].id == search_id){\r\n          this.current = this.message[i];\r\n          this.current_index = i;\r\n          this.current_id = search_id\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    get_data(){\r\n      let vm = this\r\n        axios\r\n            .get('http://127.0.0.1:5000/admin/charger/statistic')\r\n            .then(function (response){\r\n              response = response.data['data']\r\n              vm.message = response;\r\n              vm.current = response[0];\r\n              for(const i in response){\r\n                if(response[i].id == vm.current_id){\r\n                  vm.current = response[i];\r\n                  vm.current_index = i;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              if(vm.current === null){\r\n                vm.current = response[0];\r\n                alert(\"wrong id\")\r\n              }\r\n\r\n            })\r\n            .catch(function (error) { // 请求失败处理\r\n              console.log(error);\r\n            });\r\n    },\r\n    data_pre(event){\r\n\r\n    },\r\n    switch_charge(event){\r\n\r\n    },\r\n    next_one(event){\r\n      if(this.message.length <= this.current_index + 1){\r\n        return\r\n      }\r\n      this.current_index = this.current_index + 1\r\n      this.current = this.message[this.current_index]\r\n      this.current_id = this.current.id\r\n      this.data_pre()\r\n    },\r\n    last_one(event){\r\n      if(0 > this.current_index - 1){\r\n        return\r\n      }\r\n      this.current_index = this.current_index - 1\r\n      this.current = this.message[this.current_index]\r\n      this.current_id = this.current.id\r\n      this.data_pre()\r\n    }\r\n  },\r\n  updated() {\r\n  },\r\n  destroyed() {\r\n    clearInterval(this.timer)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}