{"ast":null,"code":"import baseToNumber from './_baseToNumber.js';\nimport baseToString from './_baseToString.js';\n/**\r\n * Creates a function that performs a mathematical operation on two values.\r\n *\r\n * @private\r\n * @param {Function} operator The function to perform the operation.\r\n * @param {number} [defaultValue] The value used for `undefined` arguments.\r\n * @returns {Function} Returns the new mathematical operation function.\r\n */\n\nfunction createMathOperation(operator, defaultValue) {\n  return function (value, other) {\n    var result;\n\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n\n    if (value !== undefined) {\n      result = value;\n    }\n\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n\n      result = operator(value, other);\n    }\n\n    return result;\n  };\n}\n\nexport default createMathOperation;","map":{"version":3,"names":["baseToNumber","baseToString","createMathOperation","operator","defaultValue","value","other","result","undefined"],"sources":["D:/software_proj/front/node_modules/lodash-es/_createMathOperation.js"],"sourcesContent":["import baseToNumber from './_baseToNumber.js';\r\nimport baseToString from './_baseToString.js';\r\n\r\n/**\r\n * Creates a function that performs a mathematical operation on two values.\r\n *\r\n * @private\r\n * @param {Function} operator The function to perform the operation.\r\n * @param {number} [defaultValue] The value used for `undefined` arguments.\r\n * @returns {Function} Returns the new mathematical operation function.\r\n */\r\nfunction createMathOperation(operator, defaultValue) {\r\n  return function(value, other) {\r\n    var result;\r\n    if (value === undefined && other === undefined) {\r\n      return defaultValue;\r\n    }\r\n    if (value !== undefined) {\r\n      result = value;\r\n    }\r\n    if (other !== undefined) {\r\n      if (result === undefined) {\r\n        return other;\r\n      }\r\n      if (typeof value == 'string' || typeof other == 'string') {\r\n        value = baseToString(value);\r\n        other = baseToString(other);\r\n      } else {\r\n        value = baseToNumber(value);\r\n        other = baseToNumber(other);\r\n      }\r\n      result = operator(value, other);\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default createMathOperation;\r\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,YAAvC,EAAqD;EACnD,OAAO,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;IAC5B,IAAIC,MAAJ;;IACA,IAAIF,KAAK,KAAKG,SAAV,IAAuBF,KAAK,KAAKE,SAArC,EAAgD;MAC9C,OAAOJ,YAAP;IACD;;IACD,IAAIC,KAAK,KAAKG,SAAd,EAAyB;MACvBD,MAAM,GAAGF,KAAT;IACD;;IACD,IAAIC,KAAK,KAAKE,SAAd,EAAyB;MACvB,IAAID,MAAM,KAAKC,SAAf,EAA0B;QACxB,OAAOF,KAAP;MACD;;MACD,IAAI,OAAOD,KAAP,IAAgB,QAAhB,IAA4B,OAAOC,KAAP,IAAgB,QAAhD,EAA0D;QACxDD,KAAK,GAAGJ,YAAY,CAACI,KAAD,CAApB;QACAC,KAAK,GAAGL,YAAY,CAACK,KAAD,CAApB;MACD,CAHD,MAGO;QACLD,KAAK,GAAGL,YAAY,CAACK,KAAD,CAApB;QACAC,KAAK,GAAGN,YAAY,CAACM,KAAD,CAApB;MACD;;MACDC,MAAM,GAAGJ,QAAQ,CAACE,KAAD,EAAQC,KAAR,CAAjB;IACD;;IACD,OAAOC,MAAP;EACD,CAtBD;AAuBD;;AAED,eAAeL,mBAAf"},"metadata":{},"sourceType":"module"}